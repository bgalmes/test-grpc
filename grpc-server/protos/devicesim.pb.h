// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: devicesim.proto
// Protobuf C++ Version: 6.31.0

#ifndef devicesim_2eproto_2epb_2eh
#define devicesim_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_devicesim_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_devicesim_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_devicesim_2eproto;
}  // extern "C"
namespace devicesim {
class DeviceReply;
struct DeviceReplyDefaultTypeInternal;
extern DeviceReplyDefaultTypeInternal _DeviceReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeviceReply_class_data_;
class DeviceRequest;
struct DeviceRequestDefaultTypeInternal;
extern DeviceRequestDefaultTypeInternal _DeviceRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeviceRequest_class_data_;
}  // namespace devicesim
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace devicesim {

// ===================================================================


// -------------------------------------------------------------------

class DeviceRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:devicesim.DeviceRequest) */ {
 public:
  inline DeviceRequest() : DeviceRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceRequest(::google::protobuf::internal::ConstantInitialized);

  inline DeviceRequest(const DeviceRequest& from) : DeviceRequest(nullptr, from) {}
  inline DeviceRequest(DeviceRequest&& from) noexcept
      : DeviceRequest(nullptr, ::std::move(from)) {}
  inline DeviceRequest& operator=(const DeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceRequest& operator=(DeviceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceRequest& default_instance() {
    return *reinterpret_cast<const DeviceRequest*>(
        &_DeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DeviceRequest& a, DeviceRequest& b) { a.Swap(&b); }
  inline void Swap(DeviceRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeviceRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeviceRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeviceRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "devicesim.DeviceRequest"; }

 protected:
  explicit DeviceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeviceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeviceRequest& from);
  DeviceRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeviceRequest&& from) noexcept
      : DeviceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:devicesim.DeviceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeviceRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_devicesim_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeviceRequest_class_data_;
// -------------------------------------------------------------------

class DeviceReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:devicesim.DeviceReply) */ {
 public:
  inline DeviceReply() : DeviceReply(nullptr) {}
  ~DeviceReply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceReply(::google::protobuf::internal::ConstantInitialized);

  inline DeviceReply(const DeviceReply& from) : DeviceReply(nullptr, from) {}
  inline DeviceReply(DeviceReply&& from) noexcept
      : DeviceReply(nullptr, ::std::move(from)) {}
  inline DeviceReply& operator=(const DeviceReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceReply& operator=(DeviceReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceReply& default_instance() {
    return *reinterpret_cast<const DeviceReply*>(
        &_DeviceReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(DeviceReply& a, DeviceReply& b) { a.Swap(&b); }
  inline void Swap(DeviceReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceReply& from) { DeviceReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceReply* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "devicesim.DeviceReply"; }

 protected:
  explicit DeviceReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeviceReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeviceReply& from);
  DeviceReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeviceReply&& from) noexcept
      : DeviceReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceNameFieldNumber = 1,
    kTemperatureFieldNumber = 2,
    kHumidityFieldNumber = 3,
    kTimestampFieldNumber = 5,
    kPressureFieldNumber = 4,
  };
  // string device_name = 1;
  void clear_device_name() ;
  const ::std::string& device_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_device_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_device_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_device_name();
  void set_allocated_device_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_device_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_device_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_device_name();

  public:
  // float temperature = 2;
  void clear_temperature() ;
  float temperature() const;
  void set_temperature(float value);

  private:
  float _internal_temperature() const;
  void _internal_set_temperature(float value);

  public:
  // float humidity = 3;
  void clear_humidity() ;
  float humidity() const;
  void set_humidity(float value);

  private:
  float _internal_humidity() const;
  void _internal_set_humidity(float value);

  public:
  // int64 timestamp = 5;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // float pressure = 4;
  void clear_pressure() ;
  float pressure() const;
  void set_pressure(float value);

  private:
  float _internal_pressure() const;
  void _internal_set_pressure(float value);

  public:
  // @@protoc_insertion_point(class_scope:devicesim.DeviceReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 41,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeviceReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr device_name_;
    float temperature_;
    float humidity_;
    ::int64_t timestamp_;
    float pressure_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_devicesim_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeviceReply_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DeviceRequest

// -------------------------------------------------------------------

// DeviceReply

// string device_name = 1;
inline void DeviceReply::clear_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& DeviceReply::device_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:devicesim.DeviceReply.device_name)
  return _internal_device_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeviceReply::set_device_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.device_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:devicesim.DeviceReply.device_name)
}
inline ::std::string* PROTOBUF_NONNULL DeviceReply::mutable_device_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_device_name();
  // @@protoc_insertion_point(field_mutable:devicesim.DeviceReply.device_name)
  return _s;
}
inline const ::std::string& DeviceReply::_internal_device_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_name_.Get();
}
inline void DeviceReply::_internal_set_device_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.device_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DeviceReply::_internal_mutable_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.device_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DeviceReply::release_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:devicesim.DeviceReply.device_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.device_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.device_name_.Set("", GetArena());
  }
  return released;
}
inline void DeviceReply::set_allocated_device_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.device_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_name_.IsDefault()) {
    _impl_.device_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:devicesim.DeviceReply.device_name)
}

// float temperature = 2;
inline void DeviceReply::clear_temperature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temperature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float DeviceReply::temperature() const {
  // @@protoc_insertion_point(field_get:devicesim.DeviceReply.temperature)
  return _internal_temperature();
}
inline void DeviceReply::set_temperature(float value) {
  _internal_set_temperature(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:devicesim.DeviceReply.temperature)
}
inline float DeviceReply::_internal_temperature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.temperature_;
}
inline void DeviceReply::_internal_set_temperature(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temperature_ = value;
}

// float humidity = 3;
inline void DeviceReply::clear_humidity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.humidity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float DeviceReply::humidity() const {
  // @@protoc_insertion_point(field_get:devicesim.DeviceReply.humidity)
  return _internal_humidity();
}
inline void DeviceReply::set_humidity(float value) {
  _internal_set_humidity(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:devicesim.DeviceReply.humidity)
}
inline float DeviceReply::_internal_humidity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.humidity_;
}
inline void DeviceReply::_internal_set_humidity(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.humidity_ = value;
}

// float pressure = 4;
inline void DeviceReply::clear_pressure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pressure_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float DeviceReply::pressure() const {
  // @@protoc_insertion_point(field_get:devicesim.DeviceReply.pressure)
  return _internal_pressure();
}
inline void DeviceReply::set_pressure(float value) {
  _internal_set_pressure(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:devicesim.DeviceReply.pressure)
}
inline float DeviceReply::_internal_pressure() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pressure_;
}
inline void DeviceReply::_internal_set_pressure(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pressure_ = value;
}

// int64 timestamp = 5;
inline void DeviceReply::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t DeviceReply::timestamp() const {
  // @@protoc_insertion_point(field_get:devicesim.DeviceReply.timestamp)
  return _internal_timestamp();
}
inline void DeviceReply::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:devicesim.DeviceReply.timestamp)
}
inline ::int64_t DeviceReply::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void DeviceReply::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace devicesim


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // devicesim_2eproto_2epb_2eh
